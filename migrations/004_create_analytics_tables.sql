-- Metrics Table
CREATE TABLE analytics.metrics (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    metric_name VARCHAR(100) NOT NULL,
    value DOUBLE PRECISION NOT NULL,
    labels JSONB,
    recorded_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE INDEX idx_analytics_metric_name ON analytics.metrics(metric_name);
CREATE INDEX idx_analytics_recorded ON analytics.metrics(recorded_at);
CREATE INDEX idx_analytics_labels ON analytics.metrics USING GIN(labels);

COMMENT ON TABLE analytics.metrics IS 'Time-series metrics for monitoring and analytics';

-- Events Table
CREATE TABLE analytics.events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_type VARCHAR(100) NOT NULL,
    user_id UUID,
    business_id UUID,
    event_data JSONB NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE INDEX idx_analytics_event_type ON analytics.events(event_type);
CREATE INDEX idx_analytics_event_user ON analytics.events(user_id);
CREATE INDEX idx_analytics_event_business ON analytics.events(business_id);
CREATE INDEX idx_analytics_event_created ON analytics.events(created_at);
CREATE INDEX idx_analytics_event_data ON analytics.events USING GIN(event_data);

COMMENT ON TABLE analytics.events IS 'Application events for tracking user behavior and system activity';

-- Aggregations (materialized view for performance)
CREATE MATERIALIZED VIEW analytics.daily_stats AS
SELECT 
    DATE(created_at) as date,
    event_type,
    COUNT(*) as event_count,
    COUNT(DISTINCT user_id) as unique_users
FROM analytics.events
GROUP BY DATE(created_at), event_type;

CREATE INDEX idx_analytics_daily_stats_date ON analytics.daily_stats(date);
CREATE INDEX idx_analytics_daily_stats_type ON analytics.daily_stats(event_type);

COMMENT ON MATERIALIZED VIEW analytics.daily_stats IS 'Pre-aggregated daily statistics for dashboards';

-- Function to refresh materialized view
CREATE OR REPLACE FUNCTION analytics.refresh_daily_stats()
RETURNS void AS $$
BEGIN
    REFRESH MATERIALIZED VIEW CONCURRENTLY analytics.daily_stats;
END;
$$ LANGUAGE plpgsql;

COMMENT ON FUNCTION analytics.refresh_daily_stats IS 'Refresh daily stats materialized view';
