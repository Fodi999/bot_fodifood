-- AI Cache (replaces Sled ai_cache.db)
CREATE TABLE ai.cache_entries (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cache_key VARCHAR(255) NOT NULL UNIQUE,
    query TEXT NOT NULL,
    response TEXT NOT NULL,
    model VARCHAR(50) NOT NULL,
    cached_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    expires_at TIMESTAMPTZ NOT NULL,
    hit_count INTEGER NOT NULL DEFAULT 0,
    quality_score DOUBLE PRECISION
);

CREATE INDEX idx_ai_cache_key ON ai.cache_entries(cache_key);
CREATE INDEX idx_ai_cache_expires ON ai.cache_entries(expires_at);
CREATE INDEX idx_ai_cache_model ON ai.cache_entries(model);
CREATE INDEX idx_ai_cache_created ON ai.cache_entries(cached_at);

COMMENT ON TABLE ai.cache_entries IS 'AI response cache - replaces Sled L2 cache';

-- AI Memory Facts (persistent knowledge)
CREATE TABLE ai.memory_facts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID,
    business_id UUID,
    fact_type VARCHAR(50) NOT NULL,
    fact_data JSONB NOT NULL,
    confidence DOUBLE PRECISION NOT NULL DEFAULT 1.0,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE INDEX idx_ai_memory_user ON ai.memory_facts(user_id);
CREATE INDEX idx_ai_memory_business ON ai.memory_facts(business_id);
CREATE INDEX idx_ai_memory_type ON ai.memory_facts(fact_type);
CREATE INDEX idx_ai_memory_data ON ai.memory_facts USING GIN(fact_data);

COMMENT ON TABLE ai.memory_facts IS 'Persistent AI memory - learned facts about users and businesses';

-- AI Conversations (chat history)
CREATE TABLE ai.conversations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID,
    session_id UUID NOT NULL DEFAULT gen_random_uuid(),
    role VARCHAR(20) NOT NULL, -- 'user', 'assistant', 'system'
    content TEXT NOT NULL,
    metadata JSONB,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE INDEX idx_ai_conv_session ON ai.conversations(session_id);
CREATE INDEX idx_ai_conv_user ON ai.conversations(user_id);
CREATE INDEX idx_ai_conv_created ON ai.conversations(created_at);
CREATE INDEX idx_ai_conv_metadata ON ai.conversations USING GIN(metadata);

COMMENT ON TABLE ai.conversations IS 'Chat conversation history for context and analysis';

-- AI Learning Data (feedback and training)
CREATE TABLE ai.learning_data (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category VARCHAR(100) NOT NULL,
    input_data JSONB NOT NULL,
    output_data JSONB NOT NULL,
    feedback_score DOUBLE PRECISION,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE INDEX idx_ai_learning_category ON ai.learning_data(category);
CREATE INDEX idx_ai_learning_created ON ai.learning_data(created_at);
CREATE INDEX idx_ai_learning_input ON ai.learning_data USING GIN(input_data);
CREATE INDEX idx_ai_learning_output ON ai.learning_data USING GIN(output_data);

COMMENT ON TABLE ai.learning_data IS 'Training data and user feedback for AI improvement';
