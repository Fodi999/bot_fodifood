-- FODI Token Ledger (replaces Sled fodi_ledger.db)
CREATE TABLE blockchain.fodi_transactions (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tx_id VARCHAR(255) NOT NULL UNIQUE,
    from_address VARCHAR(255),
    to_address VARCHAR(255) NOT NULL,
    amount BIGINT NOT NULL,
    tx_type VARCHAR(50) NOT NULL, -- 'transfer', 'mint', 'burn', 'reward'
    status VARCHAR(20) NOT NULL DEFAULT 'pending', -- 'pending', 'confirmed', 'failed'
    blockchain_tx VARCHAR(255),
    metadata JSONB,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    confirmed_at TIMESTAMPTZ
);

CREATE INDEX idx_blockchain_tx_id ON blockchain.fodi_transactions(tx_id);
CREATE INDEX idx_blockchain_from ON blockchain.fodi_transactions(from_address);
CREATE INDEX idx_blockchain_to ON blockchain.fodi_transactions(to_address);
CREATE INDEX idx_blockchain_status ON blockchain.fodi_transactions(status);
CREATE INDEX idx_blockchain_type ON blockchain.fodi_transactions(tx_type);
CREATE INDEX idx_blockchain_created ON blockchain.fodi_transactions(created_at);
CREATE INDEX idx_blockchain_metadata ON blockchain.fodi_transactions USING GIN(metadata);

COMMENT ON TABLE blockchain.fodi_transactions IS 'FODI token transaction ledger - replaces Sled';

-- Wallets (replaces Sled wallets.db)
CREATE TABLE blockchain.wallets (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID,
    public_key VARCHAR(255) NOT NULL UNIQUE,
    encrypted_private_key TEXT,
    wallet_type VARCHAR(50) NOT NULL DEFAULT 'solana',
    balance BIGINT NOT NULL DEFAULT 0,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    last_sync TIMESTAMPTZ,
    metadata JSONB
);

CREATE INDEX idx_blockchain_wallet_user ON blockchain.wallets(user_id);
CREATE INDEX idx_blockchain_wallet_pubkey ON blockchain.wallets(public_key);
CREATE INDEX idx_blockchain_wallet_type ON blockchain.wallets(wallet_type);

COMMENT ON TABLE blockchain.wallets IS 'User Solana wallets - replaces Sled storage';

-- NFT Metadata
CREATE TABLE blockchain.nft_metadata (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mint_address VARCHAR(255) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    symbol VARCHAR(10),
    uri TEXT,
    owner_address VARCHAR(255),
    metadata JSONB,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE INDEX idx_blockchain_nft_mint ON blockchain.nft_metadata(mint_address);
CREATE INDEX idx_blockchain_nft_owner ON blockchain.nft_metadata(owner_address);
CREATE INDEX idx_blockchain_nft_metadata ON blockchain.nft_metadata USING GIN(metadata);

COMMENT ON TABLE blockchain.nft_metadata IS 'NFT metadata and ownership tracking';

-- Reward History
CREATE TABLE blockchain.reward_history (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID,
    order_id INTEGER,
    amount BIGINT NOT NULL,
    reason VARCHAR(255),
    tx_id VARCHAR(255),
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE INDEX idx_blockchain_reward_user ON blockchain.reward_history(user_id);
CREATE INDEX idx_blockchain_reward_order ON blockchain.reward_history(order_id);
CREATE INDEX idx_blockchain_reward_tx ON blockchain.reward_history(tx_id);
CREATE INDEX idx_blockchain_reward_created ON blockchain.reward_history(created_at);

COMMENT ON TABLE blockchain.reward_history IS 'FODI reward distribution history';

-- Add foreign key constraints
ALTER TABLE blockchain.reward_history 
    ADD CONSTRAINT fk_reward_tx 
    FOREIGN KEY (tx_id) REFERENCES blockchain.fodi_transactions(tx_id) ON DELETE SET NULL;
