use async_trait::async_trait;

use super::super::intent_handler::{Context, IntentHandler};
use crate::state::AppState;

/// üí¨ Smalltalk Intent Handler
pub struct SmalltalkHandler;

impl SmalltalkHandler {
    pub fn new() -> Self {
        Self
    }
}

#[async_trait]
impl IntentHandler for SmalltalkHandler {
    fn name(&self) -> &'static str {
        "smalltalk"
    }

    fn priority(&self) -> u8 {
        50
    }

    async fn handle(&self, _input: &str, _ctx: &mut Context, _state: &AppState) -> Option<String> {
        tracing::info!(target: "ai", "üí¨ Handling smalltalk request");

        Some("üëã –ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? –ú–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é, –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –∏–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã.".to_string())
    }
}

/// ‚ùì Help Intent Handler
pub struct HelpHandler;

impl HelpHandler {
    pub fn new() -> Self {
        Self
    }
}

#[async_trait]
impl IntentHandler for HelpHandler {
    fn name(&self) -> &'static str {
        "help"
    }

    fn priority(&self) -> u8 {
        100
    }

    async fn handle(&self, _input: &str, _ctx: &mut Context, _state: &AppState) -> Option<String> {
        tracing::info!(target: "ai", "‚ùì Handling help request");

        Some(format!(
            "ü§ñ **–ß—Ç–æ —è —É–º–µ—é:**\n\n\
            üìã –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é\n\
            üîç –ù–∞–π—Ç–∏ –±–ª—é–¥–æ\n\
            üõí –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑\n\
            üì¶ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞\n\
            üöö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ\n\n\
            –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ!"
        ))
    }
}

/// üöö Delivery Info Handler
pub struct DeliveryHandler;

impl DeliveryHandler {
    pub fn new() -> Self {
        Self
    }
}

#[async_trait]
impl IntentHandler for DeliveryHandler {
    fn name(&self) -> &'static str {
        "deliveryinfo"  // Match lowercase intent
    }

    fn priority(&self) -> u8 {
        80
    }

    async fn handle(&self, _input: &str, _ctx: &mut Context, _state: &AppState) -> Option<String> {
        tracing::info!(target: "ai", "üöö Handling delivery info request");

        Some(format!(
            "üöö **–î–æ—Å—Ç–∞–≤–∫–∞:**\n\n\
            ‚è±Ô∏è –í—Ä–µ–º—è: 30-60 –º–∏–Ω—É—Ç\n\
            üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: –±–µ—Å–ø–ª–∞—Ç–Ω–æ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 500‚ÇΩ\n\
            üìç –ó–æ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: –≤–µ—Å—å –≥–æ—Ä–æ–¥\n\n\
            –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: 300‚ÇΩ"
        ))
    }
}
